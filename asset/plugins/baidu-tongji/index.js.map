{"version":3,"file":"index.js","mappings":"uIACIA,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,QCpBfJ,EAAoBO,EAAI,CAACH,EAASI,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,EAAEF,EAAYC,KAAST,EAAoBU,EAAEN,EAASK,IAC5EE,OAAOC,eAAeR,EAASK,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ET,EAAoBU,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,G,sCCAlF,MAAM,EAA+BI,OAAiB,SCAhD,EAA+BA,OAAc,MCkBrC,SAAUC,IACpB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,WAEnB,OAVE,SAA0BD,GAE5B,MAAME,EAASC,EAAQ,KAEvB,OAAOH,EAAOI,gBAAgBC,eAAaH,GAMpCE,CAAgBJ,GCV3B,QCUc,YAKY,IAClBA,GALJM,WAAYC,EADqB,SAEjCC,EAFiC,QAGjCC,KACGC,GACmB,EAGlBV,EAASG,EAAQ,KAcrB,IAAIG,EAAqC,GACzC,GAAIC,EACA,IAAK,MAAOI,EAAMC,KAAcvB,OAAOwB,QAAQN,GACvCK,IAEIN,EAAWK,GADXC,aAAqBE,MACF,EAACC,EAAAA,EAAAA,MAAKH,EAAU,IAAKA,EAAU,KAE/BG,EAAAA,EAAAA,MAAKH,IAMxC,OAAO,IAAII,EAAAA,OAAO,CACdL,KAAMN,eACNY,UAAMC,EACNZ,aACAE,WACAR,YACGU,IDnDX,CAA4B,CACxBS,SAASC,GACL,GAAgB,WAAZA,EAAsB,CACtB,MAAMC,EAAStB,IAAYuB,SAAS,WACpCC,EAAAA,EAAAA,YAAU,KACFF,KACAG,EAAAA,EAAAA,QAAO,8BAAD,OAA+BH,GAAU,CAC3CI,OAAO,IAGX3B,OAAO4B,KAAO5B,OAAO4B,MAAQ,GAE7B5B,OAAO4B,KAAKC,KAAK,CAAC,iBAAkB,mBAAoB,CACpDC,qBAAsB,SAASC,EAAiBC,GAG5C,OAFAD,EAAUA,EAAQE,MAAM,KAAK,MAC7BD,EAAUA,EAAQC,MAAM,KAAK,WAK1C,S","sources":["webpack://TopWritePlugins.baidu-tongji/webpack/bootstrap","webpack://TopWritePlugins.baidu-tongji/webpack/runtime/define property getters","webpack://TopWritePlugins.baidu-tongji/webpack/runtime/hasOwnProperty shorthand","webpack://TopWritePlugins.baidu-tongji/external window \"TopWrite\"","webpack://TopWritePlugins.baidu-tongji/external window \"React\"","webpack://TopWritePlugins.baidu-tongji/./.topwrite/use-config.ts","webpack://TopWritePlugins.baidu-tongji/./src/index.ts","webpack://TopWritePlugins.baidu-tongji/./.topwrite/create-plugin.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"TopWrite\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","import { BaseConfig, Config, useBook } from 'topwrite';\r\nimport { Config as ConfigType } from './config';\r\n\r\ndeclare const PLUGIN_NAME: string;\r\n\r\ndeclare module 'topwrite' {\r\n    export interface HookContext {\r\n        getConfig(): BaseConfig<ConfigType>;\r\n    }\r\n}\r\n\r\nexport function getPluginConfig(config: Config): BaseConfig<ConfigType> {\r\n\r\n    const schema = require('../config.json');\r\n\r\n    return config.getPluginConfig(PLUGIN_NAME, schema);\r\n}\r\n\r\nexport default function useConfig() {\r\n    const { config } = useBook();\r\n\r\n    return getPluginConfig(config);\r\n};\r\n","import createPlugin from '@@/create-plugin';\r\nimport { loadjs } from 'topwrite';\r\nimport { useEffect } from 'react';\r\nimport useConfig from '@@/use-config';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        _hmt: any[];\r\n    }\r\n\r\n}\r\nexport default createPlugin({\r\n    activate(context) {\r\n        if (context === 'reader') {\r\n            const siteId = useConfig().getValue('siteid');\r\n            useEffect(() => {\r\n                if (siteId) {\r\n                    loadjs(`https://hm.baidu.com/hm.js?${siteId}`, {\r\n                        async: true,\r\n                    });\r\n\r\n                    window._hmt = window._hmt || [];\r\n\r\n                    window._hmt.push(['_requirePlugin', 'UrlChangeTracker', {\r\n                        shouldTrackUrlChange: function(newPath: string, oldPath: string) {\r\n                            newPath = newPath.split('?')[0];\r\n                            oldPath = oldPath.split('?')[0];\r\n                            return newPath != oldPath;\r\n                        }\r\n                    }]);\r\n                }\r\n            }, []);\r\n        }\r\n    }\r\n});\r\n","import { ComponentsMap, GetComponentType, Plugin, PluginConfig, PluginMeta } from 'topwrite';\r\nimport { ComponentType, lazy } from 'react';\r\n\r\ndeclare const PLUGIN_NAME: string;\r\ndeclare const PLUGIN_META: PluginMeta | undefined;\r\ndeclare const SUPPORT_CONFIG: boolean;\r\ndeclare const SUPPORT_LANG: boolean;\r\n\r\ntype LazyType<T extends ComponentType<any>> = () => Promise<{ default: T }>;\r\n\r\ntype LazyCompType<index extends keyof ComponentsMap> = LazyType<GetComponentType<index>>;\r\n\r\nexport type LazyComponentsMap = {\r\n    [index in keyof ComponentsMap]?: LazyCompType<index> | [LazyCompType<index>, { priority?: number }]\r\n}\r\n\r\nexport interface PluginConstructorParams extends Omit<PluginConfig, 'name' | 'meta' | 'components' | 'config'> {\r\n    locales?: string[];\r\n    components?: LazyComponentsMap;\r\n}\r\n\r\nexport default function createPlugin({\r\n    components: lazyComponents,\r\n    localize,\r\n    locales,\r\n    ...others\r\n}: PluginConstructorParams) {\r\n    let config;\r\n    if (SUPPORT_CONFIG) {\r\n        config = require('../config.json');\r\n    }\r\n\r\n    if (SUPPORT_LANG) {\r\n        if (!localize && locales) {\r\n            localize = (locale) => {\r\n                if (locales.includes(locale)) {\r\n                    return import(`../src/lang/${locale}.json`);\r\n                }\r\n                return import(`../src/lang/${locales[0]}.json`);\r\n            };\r\n        }\r\n    }\r\n\r\n    let components: Partial<ComponentsMap> = {};\r\n    if (lazyComponents) {\r\n        for (const [name, component] of Object.entries(lazyComponents)) {\r\n            if (component) {\r\n                if (component instanceof Array) {\r\n                    components[name] = [lazy(component[0]), component[1]];\r\n                } else {\r\n                    components[name] = lazy(component);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return new Plugin({\r\n        name: PLUGIN_NAME,\r\n        meta: PLUGIN_META,\r\n        components,\r\n        localize,\r\n        config,\r\n        ...others\r\n    });\r\n}\r\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","window","useConfig","config","useBook","schema","require","getPluginConfig","PLUGIN_NAME","components","lazyComponents","localize","locales","others","name","component","entries","Array","lazy","Plugin","meta","PLUGIN_META","activate","context","siteId","getValue","useEffect","loadjs","async","_hmt","push","shouldTrackUrlChange","newPath","oldPath","split"],"sourceRoot":""}